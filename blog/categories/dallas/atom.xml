<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dallas | gongmingqm10]]></title>
  <link href="http://www.gongmingqm10.net/blog/categories/dallas/atom.xml" rel="self"/>
  <link href="http://www.gongmingqm10.net/"/>
  <updated>2015-09-16T16:44:23+08:00</updated>
  <id>http://www.gongmingqm10.net/</id>
  <author>
    <name><![CDATA[Gong Ming]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Work in Dallas]]></title>
    <link href="http://www.gongmingqm10.net/blog/2015/03/02/work-in-dallas/"/>
    <updated>2015-03-02T02:39:53+08:00</updated>
    <id>http://www.gongmingqm10.net/blog/2015/03/02/work-in-dallas</id>
    <content type="html"><![CDATA[<p>时光匆匆，算上实习期来ThoughtWorks工作已近一年。如果技术方面来看，我提升的主要是广度。但是从敏捷实践角度来看，我正在也将继续朝深度上提升。</p>

<p>敏捷这个词，大学期间或多或少听过，大体的印象是软件工程学的一些术语，之后在项目中才开始慢慢实践。我前后经历过三四个项目，虽然每个项目待的时间不长，但是却又想能够和不同的团队，面对不同的客户，也有幸能够在不同的国家体会不同文化下的敏捷实践的标准。</p>

<!-- more -->


<p>由于敏捷包含的方面很多，作为Developer的我，也会主要从Developer的角度，结合自己的想法来谈自己在这一年对敏捷的认识。此文不是软文，只是自己闲时的一点纪录。不喜求轻喷。</p>

<h3>开发驱动测试(DDT)</h3>

<p>加入TW，很长一段时间我一直都抱有这个想法。当时虽然已经在项目上工作，在Code Review的压力下也会偶尔用开发驱动测试(DDT)。因为别人告诉我<code>不写测试的程序员不是好程序员</code>，这个句式怎么听起来和<code>不想当将军的士兵不是好士兵</code>一个道理。听起来是很多道理，但是真正实施的时候呢，我开始犯难了。</p>

<p>测试的痛点在哪里？我常这样问自己，其实我有时也不知道痛点再哪里，只是不太会写。为什么不会写？因为我连怎么实现都不知道，怎么会写？通过这样反推过来也就是只有知道怎么实现，才知道怎么写测试。这个观点对吗？</p>

<blockquote><p>只有知道怎么实现，才会知道怎么写测试。写测试有点作秀的嫌疑</p></blockquote>

<p>这是我曾经的观点，先别批评我逻辑性或者对测试的理解有多差，因为这是我过去的想法。如果我现在来看这句话的话，我会套用那句很通用的 <code>It depends</code>。肯定有人会反驳，那到底取决于什么呢。</p>

<p>以我现在的认知来看，我之所以不知道在实现之前怎么写测试，往往是由于要测试的对象本身很大，很杂，一个方法要管的事情太多了，所以我不知道怎么测试。其实回过头来想想，当一个东西连测试都很难写的时候，是不是意味着我所要测试的函数做了太多的事情了呢。</p>

<ul>
<li>重构里的术语来讲，自己对类或者方法的设计不太合理，导致要测试的内容过多而不知从何下手。</li>
<li>另外一种角度来看，如果一个测试很难描述出测试对象的时候，为什么不可以多增加几个测试，循序渐进的去添加测试。</li>
<li>如果以上两种情况你都不属于，很不幸有可能你在动手之前应该查一下，确保自己清楚这个被测对象的职责，代码上基本的实现思路。</li>
</ul>


<p>当然对于某些情况，我确实可以先写测试再写实现。例如一个简单的计算器的加法，测试中我知道给函数两个输入值，我期望能够输出某种结果。在这种情形下我知道怎么写测试因为要测试的对象足够简单，负责的事情足够清楚。这种有结果输出的测试也是相对简单的。这时候我甚至完全不用操心别人究竟怎么实现的，我只需要用强有力的测试来验证结果即可。</p>

<p>知已知彼，百战不怠。你之所以知道怎么用测试驱动开发，因为你在测试之前已经在心中将这个函数设计和实现了一遍。如果你和我一样达不到这种境界，那可能就是对这块知识了解确实太少，意味着你该自己补补了。</p>

<h3>测试的价值</h3>

<p>测试到底有没有价值，得看你是怎么理解价值的。从科学的角度来看，肯定会有人用实验来证明写测试能够减少Bug发生率，虽然前期写测试花费时间，但在后期却能够节约时间。这种最常见的来证明敏捷实践标准的理论数见不鲜，但是有时却很难是刚入门的人信服。</p>

<p>从我经历过的项目来看，有测试或者没测试的项目都有接触过。对测试的价值也有自己的认识。先不管别人的研究结果如果，单从开发人员开发时间来考虑，测试的确会花费更多时间，相当于你要写两份代码，一份实现，一份保证已实现的功能不被后期修改破坏掉。当然测试的确可以提高产品质量。</p>

<p>什么时候我不会写测试，虽然我信奉测试是产品质量的保障，但是有时我不一定会写测试：</p>

<ol>
<li>交付周期过短的项目，并且是在没有引入测试的项目基础上开发。这种项目在国内客户中比较常见，多半是对原来的项目增加一个模块，并且之前的代码没有测试。这类项目的特点是周期短，功能相对较少。敏捷实践是敏捷实践，但是没必要固执的和自己死磕。因为也许客户并不在乎你有没有测试，只在乎产品能不能按期上线。</li>
<li>功能变化过快的互联网产品。一些初创型公司在做产品时往往信奉<code>天下武功，唯快不破</code>，特别是公司人手不够，功能较多，并且在每两周一次的迭代中功能变化过大的时候，维护测试变显得有点复杂。当然并不意味着任何的测试都是多余的。这里有个测试力度的问题，具体得靠自己的把握。</li>
</ol>


<p>什么时候我会在项目中引入测试呢？</p>

<ol>
<li>项目周期相对较长，客户经济上有能力承担多几个开发者带来的成本；</li>
<li>如果是在客户原有系统上开发，之前的系统就有一套测试体系，无疑我们在增加代码的时候应该增加测试。而且尽量沿用之前已经构建好的一整套测试体系。</li>
<li>一个从零开始的项目，并且有可能建立长期合作的客户。这是TW的核心竞争力，卓越软件质量的前提。客户不提，我们自己也应该做到。</li>
</ol>


<p>写测试是一种好习惯，至少作为一个合格的程序员，应该写测试。如果你是一个Github上代码贡献的活跃者，在为自己写代码的时候，请尽量为自己的代码加上测试。<a href="https://travis-ci.org/repositories">Travis</a>就是这样一个免费的提供CI服务的平台，如果你想为自己的代码加上测试但是又不想自己去搭建CI，可以试试Travis。</p>

<p>回归正题，测试的价值在于你多看重软件质量。测试有时会消耗一定的时间，但是有测试保障的软件在质量上的确可以提高好几个层次。是否写测试则需要结合你自己的项目实际情况以及客户本身而定。</p>

<p>如果你经历过国内客户和国外客户，那么你应该能够体会到他们对于软件质量的不同态度。当然所有人肯定都希望软件交付质量最高，时间最短。但是当两者需要权衡的时候，国内客户比较在乎的会是进度，国外客户比较在乎的是质量。所以质量和进度之间需要找到一个平衡点。</p>

<p>从国内外客户的差异，其实也可以联想到国内外软件开发者的差异。到美国这边与美国这边的同事办公之后发现，这边的同事对于测试的重视程度要远远高于国内的同事(不是黑ThoughtWorks China的同事们)。<code>You can not do anything when you write test. Test first</code>，这是美国这边一位senior的同事和我pair的时候说的。自己曾经那些不好的编程习惯到了这边是应该好好改改了。</p>

<p>在美国这边工作曾经有几天我对项目上的测试有点质疑了，因为有些地方实在测的太细，几乎是想用测试覆盖掉每一行代码，并且有些代码还被多个测试覆盖。后来偶然的聊天中，同事告诉我 <code>I think I don't write so much meaningful tests in our code, some tests seems to be useless. And Jered is more expereienced, he pointed out.</code>，虽然这是一种谦虚的说法。但是这却告诉我，写好测试才能真正体现测试的价值。</p>

<p>我姑且称那些永远不会fail，或者基本没有测任何有意义的东西的测试为<code>僵尸测试</code>，这种测试太多了直接影响整个测试的可阅读性。好的测试应该可以通过函数命名，测试输出结果的判断来提供文档的功能。所以不要用数量来堆砌测试，努力写好测试是关键。</p>

<h3>敏捷团队角色</h3>

<p>敏捷开发中很重要的一部分是团队角色。一个敏捷团队主要有应用开发工程师(Dev)，业务分析师(BA)，质量保障工程师(QA)等。在项目的Story估点之时，除了有BA和QA的参与，Dev的参与也是很重要的部分。BA和QA主要从业务上评估，Dev主要从技术上评估，这种多人参与过的估点才是有意义的。</p>

<p>同样一个Story制定的时候产品设计效果图和可验证的Scenario是很重要的。Scenario的制定其实考察的是BA/QA对业务以及实际使用场景的考验。这一点我在Mobile端体会尤其明显。因为Mobile端更重交互，对于用户可能有的行为，制定验收标准是就应该考虑清楚。所以这时候BA不仅仅承担一个业务分析的角色，还承担着用户的角色。</p>

<p>Dev和BA沟通Story的时候最简单的情形是以用户为媒介。无论业务分析还是开发实现，最终都是为了给终端用户一个具有某种功能的产品。</p>

<p>有时我会想如果让Dev转型当BA，那这个BA一定很能了解功能的实现者。后来发现这种想法本身存在一定的问题，因为不管这个BA懂不懂具体的实现，BA/QA应该懂的是用户，应该懂得是平台特性以及用户特性。无论是Mobile和Web，抑或是Android和IOS，无论是敏捷团队的何种角色，你都得尝试去了解这个平台的特性，了解终端用户，才能够做出更好的决策。</p>

<h3>结语</h3>

<p>作为ThoughtWorks咨询师，我们应该知道公司的核心竞争力是什么，我们也更应该尝试去影响客户，给客户带来价值。也希望新的一年里自己能够在敏捷实践上做得更好，能够帮助客户，影响客户。</p>

<blockquote><p>We think disruptively to deliver technology to address our clients' toughest challenges, all while seeking to revolutionize the IT industry and create positive social change.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Travel to Dallas - Life]]></title>
    <link href="http://www.gongmingqm10.net/blog/2015/03/01/travel-to-dallas-life/"/>
    <updated>2015-03-01T11:44:57+08:00</updated>
    <id>http://www.gongmingqm10.net/blog/2015/03/01/travel-to-dallas-life</id>
    <content type="html"><![CDATA[<p>来达拉斯已过半月，从去年的十二月份开始规划，到二月中旬过来，再到过完这边最难熬的两个星期。生活工作渐入正轨，是时候来总结下这个特别的二月。</p>

<h3>出差</h3>

<!-- more -->


<p>“去美国出差”，第一次知道这条消息还是YueYue发我微信上的。看完这条消息的时候内心很激动，因为终于可以去大美利坚了。记得毕业的时候就特羡慕能够来美国念书的同学，心里想着以后有机会也去美国看一看，看一看外面的世界，见识下外面的风土人情。如今这个选择摆在我的面前，我不想像周星驰那句台词里说的那样，“曾经有一段很好的&hellip;摆在我面前，但是&hellip;”。</p>

<p>我要去美国，就是这种想法瞬间在自己的脑海中扎根。冷静之余，我开始想到生活，想过没办法回家过年，和女友又得继续分别数月，在武汉的生活好不容易走上正轨，又得开始去陌生的地方，与陌生的人共事。这种惶恐让人感觉到迷茫。坚定决心，开始和女朋友沟通，于是沟通了几个小时，两人差点闹得分手了。最终我还是说服了在电话那头涕不成声的女友，和父母的沟通稍微顺畅一点，父母支持我自己的决定，但是后来听姐姐说妈妈挂完电话后眼泪也流下来了&hellip;</p>

<p>这有点让我想起一些黑帮片里面的情形，走江湖的都基本无情无爱，了无牵挂，才能走得更远。当然现实生活中，事情远不是0和1的选择，很多事情可以协调的，终于把去美国出差的意向确定了。内心还是十分开心的。</p>

<blockquote><p>对某个城市有个情感的牵绊之后，无论出差到哪里，都只是在漂泊</p></blockquote>

<h3>签证顺利</h3>

<p>由于一直有公司出面，赴美签证，办得相当顺利。前提公司督促我提交各种材料，到2月初终于开始去美国使馆进行面前。除了之前转机在机场停留后，这其实是我第一次到北京，去的那边北京的天空还是挺蓝的。首都给我的印象挺好的，首都国际机场有直达市区的轻轨，这一点比其他二线城市方便多了。到北京后下午立即赶到北京，在Kun的指导下温习了一下次日使馆面试官可能会问我的问题。这种状态颇有大考来临之前老师教我们临阵磨枪的味道。晚上在宾馆停留一晚，第二天赶早去大使馆。</p>

<p>第二天一大早及其兴奋的到了大使馆，结果八点半的美国使馆门口已经是站满了人，几经周折，寄存了手机，抛弃了耳机之后终于来到了大厅。一位和善的面试官接待了我，不知道是太久没听英文了还是什么原因，我竟然基本听不懂面试官在说什么，面试官也估计很奇怪，英文这么差还去出差。但是面试官看我满脸疑惑的时候竟然给我充当了翻译。还好最后面试官对我说了"Have a good trip"，我赶紧的各种Thank you奉上。面试完之后，继续上楼缴费了500美元，看来我数月前办的全币信用卡瞬间奏效，出差或者旅游频繁还是要办一张可以刷外币的卡比较安全。</p>

<p>面签顺利通过，签证三日左右就可以拿到。于是我赶紧收拾收拾，返回武汉。</p>

<blockquote><p>面签顺利结束，北京之行太过匆匆</p></blockquote>

<h3>踏上旅途</h3>

<p>出发之前，必然少不了超市淘一批货带到美国。考虑到刚到的时候说不一定能够摸清周围超市状况，我自备牙膏牙刷等洗漱用品。饮食方面，带了我最爱的老干妈以及盐、鸡精等厨房调味品。中国菜不是哪里都有的。当然出发之前还特地买了几件稍微正式点的衣服，唯恐穿着方面给国人丢脸(事实证明想多了)。</p>

<p>临别晚上彻夜未眠，突然要匆匆离别时才觉得平平淡淡的生活竟是如此的宝贵。周围熟悉的一切竟是如此的让人留恋。早上五点半便踏上了去机场的旅程，天还是黑黑的，没有惊动室友。因为大家都是不舍离别的人。</p>

<p>紧接着便是武汉转香港，香港飞达拉斯的旅途。总共二十多个小时的旅途坐得跟以前的硬座火车感觉差不多。几乎昏睡的状态到达了达拉斯。第一感觉就是空旷，没有高耸如云的建筑物，天很蓝，空气真好。</p>

<p>匆忙的安排中没有找到接机的人，于是自己在机场拿起笔记本，找到了自己的地址。还好出口处便直接找到了Yellow cab（出租车），给师傅看了看地址，师傅娴熟的用Google地图来导航，四十余分钟，终于来到了自己的公寓。各种波折，最后终于跨进了自己的房间，放下行李。终于可以说一声：</p>

<blockquote><p>美国，我来了</p></blockquote>

<h3>如何生存</h3>

<p>陌生的环境中最重要的就是吃饭问题，正好趁上周末开始网上搜索附近的超市。最终找到了一家最近的超市，可以买到蔬菜水果和各种吃的。后来还探访到附近的Target专门卖生活用品的，以及Walmart会有更有的其他选择。赶紧的凑齐各种食材，终于在自己的努力下吃了自己在美帝国的第一顿饭，炒的菜有点水土不服，但是电饭煲蒸出来的饭全世界的味道都差不多。再加上周围的各种餐厅，吃饭的问题总算不用愁了。</p>

<p>出行，最初的设想是周末几天出去探访下这边的公共交通，后来发现这边的交通实在是少的可怜，并且在手机没网没发进行户外GPS导航的情况下，公共交通出行着实过于复杂，很容易弄丢。为了不耽误别人，我还是选择近距离在附近转悠。于是自己的活动半径基本就限制在公寓和超市之间。达拉斯在美国应该只能算是二线城市，所以没有这么多的公共交通，这边的人基本上都有自己的车，他们也确实用不上公交车。还好公司考虑到我这种情况，在热心同事的帮助下，总算是能够搭便车了。</p>

<p>刚来的这几天天气真是超好，整个一达拉斯的春天的感觉。再后来发现开始降雪。还好室友有保暖措施，所以室内温度总是很宜人。不过如果长时间待在外面，还是带件稍微厚点的衣服会比较靠谱一点。</p>

<p>医院，来这边没多久，眼睛麦粒肿就把我折腾到了要去看医生的境地。那么问题来了，医院在哪，怎么看医生？几番打探之后，发现附近走路一刻钟就可以找到一家CityDoc Urgent Care, 就诊时带上自己的护照就可以了。然后就是各种资料，填完后就开始等着医生喊我的名字，诊断之后就是去药房Pharmacy拿药。稍微看下医生就花了100多刀，美国的看病还真是不便宜。还好自己终于知道如何看病了。至少不会像以前那么的不安与紧张。</p>

<blockquote><p>衣食住行，生活的根本</p></blockquote>

<h3>SSN申请</h3>

<p>入境美国后，并且如果要长期待的话，SSN社会安全卡的申请自然少不了。公司负责人员会给我发一堆表格，填完之后我得自己去当地的社会安全组织办公室申请，在deadline去申请真不是一件明智的事情。首先，我没考虑到工到Social Security Administration的工作时间，导致差点错过这一天的申请。</p>

<p>申请的这边这天竟然也下着雪，出租车似乎都不怎么停。后来才知道我应该通过App或者电话预约才能够叫到出租车。还好我通过传统的招手的方式找到了出租车。详细描述了地址之后，出租车师傅终于把我带到了社会安全办公室。另外这边的出租车也应该给小费，但凡服务行业都应该给小费10%-20%。</p>

<p>申请通过之后，工作人员会给我一个单子，告诉我社会安全卡会在十个工作日之内寄过来。于是这次申请就完成了。</p>

<h3>结语</h3>

<p>来到TW后，生活发生了翻天覆地的变化，从前一个人在学校里面想去外面走走，现在发现在外面走走之后竟然想回去了。上次参加TWU的时候还有小伙伴陪着一起，这次竟然也就一个人踏上了这段旅途。一个人的旅途充满了各种挑战，一个人扛着一大包东西从超市往回提，一个人在国外度过春节，一个人冒着大雪在这个陌生的地方拦出租，却也一个人周末待在家里连续三天不出门。</p>

<p>我深信这是种经历，经历了异国的生活才能够更好的认识之前的生活。看到这边超市里各种人性化的设计，看到这边红绿灯路口的设计，遇见这边随时都会向你问好并且“Excuse me”的友善。这些都让我对我所生活的这个世界有了更清晰的认识。</p>

<p>美国的生活才过去半月，剩下的两个半月我希望能够认识更多，见识更多，增长更多。无论从工作还是生活，希望一切顺顺利利。</p>

<blockquote><p>Life is a journey, not a destination</p></blockquote>

<p><img src="/images/dallas-redlight.jpg" title="红绿灯路口" ></p>

<p>行人通过红绿灯路口需要按下按钮，估计这边车多行人少的缘故</p>

<p><img src="/images/dallas-target.jpg" title="Target百货店" ></p>

<p>这是Target百货店，我在这里找到了自己要买的电饭煲</p>

<p><img src="/images/dallas-dfl.jpg" title="耸动的云" ></p>

<p>纯净的天空下那股耸动的云，如末日来临一样宏大的场面</p>

<p><img src="/images/dallas-travis-street.jpg" title="Travis Street" ></p>

<p>自己生活的Travis Street, 天气晴好时外面还是很值得去的。视野一下子清新了不少</p>

<p><img src="/images/dallas-snow.jpg" title="Dallas雪景" ></p>

<p>Dallas也是会下雪的，或者说是冻雨。路面全部结冰，上班出行困难。温度变化太快</p>

<p><img src="/images/dallas-social-security-office.jpg" title="Dallas Social Security Office" ></p>

<p>办社会安全卡的地方，这里很少见高高的大楼</p>

<p><img src="/images/dallas-laoganma.jpg" title="神器老干妈" ></p>

<p>老干妈，出行必备神器。美国亚马逊上直接购买</p>
]]></content>
  </entry>
  
</feed>
